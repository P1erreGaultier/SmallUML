// automatically generated by Xtext
grammar org.smalluml.SmallUML with org.eclipse.xtext.common.Terminals

import "http://www.univ-nantes.fr/smalluml" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Diagram returns Diagram:
	{Diagram}
	'Diagram'
	'{'
		('assoc' '(' assoc+=[Association|EString] ( "," assoc+=[Association|EString])* ')' )?
		('heritage' '(' heritage+=[Heritage|EString] ( "," heritage+=[Heritage|EString])* ')' )?
		('class' '(' class+=[Class|EString] ( "," class+=[Class|EString])* ')' )?
	'}';



Class returns Class:
	Class_Impl | Association | Heritage | Role;


Type returns Type:
	Type_Impl | Float | Int0 | Boolean | String0;


Association returns Association:
	'Association'
	name=EString
	'{'
		('method' '(' method+=[Method|EString] ( "," method+=[Method|EString])* ')' )?
		('attribute' '(' attribute+=[Type|EString] ( "," attribute+=[Type|EString])* ')' )?
		'used' used=[Role|EString]
		'user' user=[Role|EString]
	'}';

Heritage returns Heritage:
	'Heritage'
	name=EString
	'{'
		('method' '(' method+=[Method|EString] ( "," method+=[Method|EString])* ')' )?
		('attribute' '(' attribute+=[Type|EString] ( "," attribute+=[Type|EString])* ')' )?
		'mother' mother=[Role|EString]
		'child' child=[Role|EString]
	'}';

Class_Impl returns Class:
	{Class}
	'Class'
	name=EString
	'{'
		('method' '(' method+=[Method|EString] ( "," method+=[Method|EString])* ')' )?
		('attribute' '(' attribute+=[Type|EString] ( "," attribute+=[Type|EString])* ')' )?
	'}';

EString returns ecore::EString:
	STRING | ID;

Method returns Method:
	{Method}
	'Method'
	name=EString
	'{'
		('parameters' '(' parameters+=[Type|EString] ( "," parameters+=[Type|EString])* ')' )?
		('return' return=[Type|EString])?
	'}';

Type_Impl returns Type:
	{Type}
	'Type'
	;

Role returns Role:
	'Role'
	name=EString
	'{'
		'upper' upper=EInt
		'lower' lower=EInt
		('method' '(' method+=[Method|EString] ( "," method+=[Method|EString])* ')' )?
		('attribute' '(' attribute+=[Type|EString] ( "," attribute+=[Type|EString])* ')' )?
		'class' class=[Class|EString]
	'}';

Float returns Float:
	'Float'
	'{'
		'value' value=EFloat
	'}';

Int0 returns Int:
	'Int'
	'{'
		'value' value=EInt
	'}';

Boolean returns Boolean:
	value?='value'
	'Boolean'
	;

String0 returns String:
	'String'
	'{'
		'value' value=EString
	'}';

EFloat returns ecore::EFloat:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

EInt returns ecore::EInt:
	'-'? INT;

EBoolean returns ecore::EBoolean:
	'true' | 'false';
